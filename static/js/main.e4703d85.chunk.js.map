{"version":3,"sources":["components/MessageForm.js","components/MyMessage.js","components/TheirMessage.js","components/ChatFeed.js","components/LoginForm.js","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","i","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4703d85.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text })\r\n\r\n        setValue('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setValue(e.target.value)\r\n\r\n        //isTyping(props, chatId)\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        sendMessage(creds, chatId, { files: e.target.files, text: '' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Write your message..\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    < PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type='file'\r\n                multiple={false}\r\n                id='upload-button'\r\n                style={{display : 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type='submit' className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","\r\nconst MyMessage = ({message}) => {\r\n    \r\n    if(message?.attachments?.length > 0){\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt='message-attachment'\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" \r\n        style={{ float:'right', marginRight:'18px', color:'white', backgroundColor:'#3B2A50' }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","\r\nconst TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n            {\r\n            message?.attachments?.length > 0\r\n            ? (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt='message-attachment'\r\n                className=\"message-image\"\r\n                style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n            />\r\n            )\r\n            : (\r\n                <div className=\"message\"\r\n                    style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                    {message.text}\r\n                </div>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat]\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, i) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${i}`}\r\n                className=\"read-receipt\"\r\n                style={{ \r\n                    float: isMyMessage ? 'right' : 'left', \r\n                    backgroundImage: `url(${person?.person?.avatar})` \r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n\r\n        return keys.map((key, i) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = i === 0 ? null : keys[i-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${i}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px',\r\n                    marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading..';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat?.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person, i) => `${person.person.username} \r\n                    ${(chat.people.length > 1 && i+1 < chat.people.length) ? \", \" : \" \"}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px'}} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n","import { useState } from \"react\"\r\nimport  axios  from 'axios'\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const projID = '694c6a66-43f4-4d1d-a02b-92ee35f81368';\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { 'Project-ID': projID, 'User-Name': username, 'User-Secret': password };\r\n\r\n        try{\r\n            await axios.get('https://api.chatengine.io/chats', {\r\n                headers: authObject\r\n            });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('secret', password);\r\n\r\n            window.location.reload();\r\n\r\n        }catch(err){\r\n            setError('Wrong credentials');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type='text' value={username} \r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Username\" required\r\n                    />\r\n                    <input type='password' value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"input\"\r\n                        placeholder=\"Password\" required\r\n                    />\r\n                    <div align='center'>\r\n                        <button type='submit' className=\"button\">\r\n                            <span>Start chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { ChatEngine } from 'react-chat-engine'\n\nimport './App.css'\n\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm'\n\nfunction App() {\n  if(!localStorage.getItem('username')) return <LoginForm />\n\n  return (\n    <ChatEngine \n      height='100vh'\n      projectID='694c6a66-43f4-4d1d-a02b-92ee35f81368'\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('secret')}\n      renderChatFeed={(chatAppProps) =><ChatFeed {...chatAppProps}/>}\n      \n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}